/// Copyright 2012-2013 Delft University of Technology, BEMNext Lab and contributors
/// 
///    Licensed under the Apache License, Version 2.0 (the "License");
///    you may not use this file except in compliance with the License.
///    You may obtain a copy of the License at
/// 
///        http://www.apache.org/licenses/LICENSE-2.0
/// 
///    Unless required by applicable law or agreed to in writing, software
///    distributed under the License is distributed on an "AS IS" BASIS,
///    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///    See the License for the specific language governing permissions and
///    limitations under the License.
/// 

using NUnit.Framework;
using SustainabilityOpen.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace SustainabilityOpenTests.Framework
{
    [TestFixture]
    public class SOBaseTests
    {
        /// <summary>
        /// Mock SOBase class
        /// </summary>
        public class MockSOBase : SOBase
        {
            public MockSOBase(string name)
                : base(name)
            {
            }
        }

        private const string TEST_NAME = "Test name";

        private MockSOBase m_SOBaseToTest;

        [SetUp]
        public void SetUp()
        {
            this.m_SOBaseToTest = new MockSOBase(TEST_NAME);
        }

        [Test]
        public void TestName()
        {
            Assert.AreEqual(TEST_NAME, this.m_SOBaseToTest.Name);
        }

        [Test]
        public void TestParent()
        {
            MockSOBase parentObject = new MockSOBase("test parent");
            MockSOBase objectToTest = new MockSOBase(TEST_NAME);

            // parentObject should not be null
            Assert.NotNull(parentObject);

            // parent of parentObject should be null
            Assert.Null(parentObject.Parent);

            // objectToTest should not be null
            Assert.NotNull(objectToTest);

            // Parent propert should not be null
            Assert.NotNull(objectToTest.Parent);
            
            // parent of objectToTest should be parentObject
            Assert.AreEqual(parentObject, objectToTest.Parent);
        }
    }
}
